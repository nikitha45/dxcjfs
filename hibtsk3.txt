


1) get a seq number from database . generate empid the form is same as the jdbc code
fname
lname

Ex: first 2 chars of fname
        first 2 chars of lname
auto generated seq number from database

fname-Rohit
lname-Sharma
empId: RoSh001
hint : createSqlQuery



2) store 10 employees in the database

hint:
3) get 3 employee details


4) top 5 employee with highest age..    sort age desc

-----------------------------------------

//create table EmployeeHib2(empid varchar(20), firstname varchar(20), lastname varchar(20), age int);
---------
Table:
hibernate creates table "EmployeeHb"


Sequence:
create sequence seqplayerhib
start with 1
increment by 1;

select seqplayerhib.currval from dual;
select seqplayerhib.nextval from dual;
----------


1.


package com.mytask.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

import com.mytask.model.Employee;

public class EmployeeDao {


SessionFactory factory;

public EmployeeDao() {

factory=new Configuration().configure().buildSessionFactory();

}


public String generateEmployeeId(String fname,String lname){
String employeeId="";
String seqNum="";
int seqNumber=0;
try{
String sql="select seqplayer.nextval from dual";


Session session= factory.openSession();
Query query=session.createSQLQuery(sql);

seqNumber=Integer.parseInt(query.getSingleResult().toString());

if(seqNumber < 100 && seqNumber >=10)
seqNum="0"+seqNumber;
else if(seqNumber<10)
seqNum="00"+seqNumber;
else
seqNum=""+seqNumber;

employeeId=fname.substring(0,2)+lname.substring(0,2)+seqNum;

return employeeId;
}
catch (Exception e) {
e.printStackTrace();
}

return "";
}



public String saveEmployee(Employee employee)
{

try
{
Session session= factory.openSession();

Transaction tx= session.beginTransaction();
employee.setEmpId(generateEmployeeId(employee.getFirstName(),employee.getLastName()));

//System.out.println(employee.getEmpId());

session.save(employee);
tx.commit();
return "employee saved";
}
catch (Exception e) {
// TODO: handle exception
e.printStackTrace();
}

return "cannot create employee";
}


}

------------------------------

package com.mytask.model;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class Employee {

String firstName;
String lastName;
@Id
String empId;
int age;
public String getFirstName() {
return firstName;
}
public void setFirstName(String firstName) {
this.firstName = firstName;
}
public String getLastName() {
return lastName;
}
public void setLastName(String lastName) {
this.lastName = lastName;
}
public String getEmpId() {
return empId;
}
public void setEmpId(String empId) {
this.empId = empId;
}
public int getAge() {
return age;
}
public void setAge(int age) {
this.age = age;
}
public Employee(String firstName, String lastName, String empId, int age) {
super();
this.firstName = firstName;
this.lastName = lastName;
this.empId = empId;
this.age = age;
}

public Employee() {
// TODO Auto-generated constructor stub
}
@Override
public String toString() {
return "Employee [firstName=" + firstName + ", lastName=" + lastName + ", empId=" + empId + ", age=" + age
+ "]";
}



}

----------------------------

package com.mytask.service;

import com.mytask.dao.EmployeeDao;
import com.mytask.model.Employee;

public class EmployeeService {

public static void main(String[] args) {

EmployeeDao dao=new EmployeeDao();
Employee employee=new Employee("John", "Cena", "", 30);
System.out.println(dao.saveEmployee(employee));

}

}
----------------------------------------------------------------------------------

2.

//creating table/inserting values
//	EmployeeDao dao=new EmployeeDao();
//	Employeehb employee=new Employeehb("","John", "Cena", 30);
//	System.out.println(dao.saveEmployee(employee));
//	Employeehb employee2=new Employeehb("","Sachin", "Tendulkar", 47);
//	System.out.println(dao.saveEmployee(employee2));
//	Employeehb employee3=new Employeehb("","Virat", "Kohli", 31);
//	System.out.println(dao.saveEmployee(employee3));
//	Employeehb employee4=new Employeehb("","Cristiano", "Ronaldo", 35);
//	System.out.println(dao.saveEmployee(employee4));
//	Employeehb employee5=new Employeehb("","Reena", "Rob", 25);
//	System.out.println(dao.saveEmployee(employee5));
//	Employeehb employee6=new Employeehb("","Meena", "Priyu", 29);
//	System.out.println(dao.saveEmployee(employee6));
//	Employeehb employee7=new Employeehb("","Sona", "Mona", 23);
//	System.out.println(dao.saveEmployee(employee7));
//	Employeehb employee8=new Employeehb("","Sonu", "Tinu", 21);
//	System.out.println(dao.saveEmployee(employee8));
//	Employeehb employee9=new Employeehb("","Aastha", "Lana", 24);
//	System.out.println(dao.saveEmployee(employee9));
//	Employeehb employee10=new Employeehb("","Yash", "Agarwal", 27);
//	System.out.println(dao.saveEmployee(employee10));
//		





--------------------------------------------------------------------------------------

3.
SELECT * FROM employeehb WHERE rownum <=3;


-------------------------------------------------------------------------------------------
4.
SELECT * FROM employeehb WHERE rownum <= 5 ORDER BY age desc;














